diff --git a/src/common/feature/xbuddy_extension/cooling.hpp b/src/common/feature/xbuddy_extension/cooling.hpp
index c6aaa5bbd3fd0d8a2598267b0f96b65165b3dacc..24fe21a72ad0d451ec1bae54158e5fbab953f324 100644
--- a/src/common/feature/xbuddy_extension/cooling.hpp
+++ b/src/common/feature/xbuddy_extension/cooling.hpp
@@ -39,14 +39,14 @@ public:
 
     // Compute at what PWM the fan(s) should be driven
     // !!!!!!!! this function should be called in regular time intervals given by dt_s !!!!!!!!
-    [[nodiscard]] FanPWM compute_pwm_step(Temperature current_temperature, std::optional<Temperature> target_temperature, FanPWMOrAuto target_pwm, FanPWM max_auto_pwm);
+    [[nodiscard]] FanPWM compute_pwm_step(Temperature current_temperature, std::optional<Temperature> target_temperature, FanPWMOrAuto target_pwm, FanPWM max_auto_pwm, float p_constant_override = proportional_constant);
 
     constexpr bool get_overheating_temp_flag() { return overheating_temp_flag; };
     constexpr bool get_critical_temp_flag() { return critical_temp_flag; };
 
 private:
     /// Computes a PWM ramping function
-    FanPWM compute_auto_regulation_step(Temperature current_temperature, Temperature target_temperature, FanPWM max_auto_pwm);
+    FanPWM compute_auto_regulation_step(Temperature current_temperature, Temperature target_temperature, FanPWM max_auto_pwm, float p_constant_override);
 
     float last_regulation_output = 0.0f;
 
