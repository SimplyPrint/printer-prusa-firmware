diff --git a/src/common/screen_lock.cpp b/src/common/screen_lock.cpp
new file mode 100644
index 0000000000000000000000000000000000000000..de720477e388aead89696f03854aa48753cebb04
--- /dev/null
+++ b/src/common/screen_lock.cpp
@@ -0,0 +1,78 @@
+//
+// Created by rylan on 12/26/24.
+//
+
+#include "screen_lock.hpp"
+#include <config_store/store_instance.hpp>
+
+screen_lock::screen_lock() {
+    get_passcode_from_eeprom();
+    get_locking_status_from_eeprom();
+    get_lock_time_from_eeprom();
+    screen_locked = false;
+}
+
+void screen_lock::set_passcode(int passcode) {
+    auto &store = config_store();
+    auto transaction = store.get_backend().transaction_guard();
+    store.set_screen_password(passcode);
+    screen_lock::passcode = passcode;
+
+}
+
+void screen_lock::get_passcode_from_eeprom() {
+    auto &store = config_store();
+    auto transaction = store.get_backend().transaction_guard();
+    screen_lock::passcode = store.get_screen_password();
+}
+
+int screen_lock::get_passcode(){
+    return screen_lock::passcode;
+}
+
+bool screen_lock::check_passcode(int passcode) {
+    return screen_lock::passcode == passcode;
+}
+
+void screen_lock::get_locking_status_from_eeprom() {
+    auto &store = config_store();
+    auto transaction = store.get_backend().transaction_guard();
+    screen_lock::lock_enabled = store.get_screen_lock_enabled();
+}
+
+bool screen_lock::get_locking_status() {
+    return screen_lock::lock_enabled;
+}
+
+void screen_lock::set_locking_status(bool status) {
+    auto &store = config_store();
+    auto transaction = store.get_backend().transaction_guard();
+    store.set_screen_lock_enabled(status);
+    screen_lock::lock_enabled = status;
+}
+
+void screen_lock::set_lock_time(int time) {
+    auto &store = config_store();
+    auto transaction = store.get_backend().transaction_guard();
+    store.set_screen_lock_time(time);
+    screen_lock::lock_time = time;
+}
+
+void screen_lock::get_lock_time_from_eeprom() {
+    auto &store = config_store();
+    auto transaction = store.get_backend().transaction_guard();
+    screen_lock::lock_time = store.get_screen_lock_time();
+}
+
+
+int screen_lock::get_lock_time() {
+    return screen_lock::lock_time;
+}
+
+void screen_lock::set_screen_locked(bool status) {
+    screen_lock::screen_locked = status;
+}
+
+bool screen_lock::get_screen_locked() {
+    return screen_lock::screen_locked;
+}
\ No newline at end of file
