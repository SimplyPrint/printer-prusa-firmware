diff --git a/src/gui/screen_home_2.hpp b/src/gui/screen_home_2.hpp
new file mode 100644
index 0000000000000000000000000000000000000000..ac379d3f5fef2bee2516bd419fd7e38df192d70b
--- /dev/null
+++ b/src/gui/screen_home_2.hpp
@@ -0,0 +1,56 @@
+// screen_home.hpp
+#pragma once
+#include "window_header.hpp"
+#include "status_footer.hpp"
+#include "gui.hpp"
+#include "screen.hpp"
+#include "gcode_info.hpp"
+#include "window_dlg_wait.hpp"
+#include <guiconfig/guiconfig.h>
+#include <option/has_mmu2.h>
+#include <option/has_nfc.h>
+
+#if HAS_MMU2()
+    #include "../../lib/Marlin/Marlin/src/feature/prusa/MMU2/mmu2_state.h"
+#endif
+
+#if HAS_NFC()
+    #include <nfc.hpp>
+    #include <optional>
+#endif
+
+class screen_home_2_data_t : public screen_t {
+public:
+    static constexpr size_t button_count = 3;
+
+private:
+    static bool ever_been_opened; // set by ctor
+
+    std::array<char, 32> header_text;
+
+    bool event_in_progress { false };
+    bool first_event { true };
+
+    window_header_t header;
+    StatusFooter footer;
+
+#if HAS_MINI_DISPLAY()
+    window_icon_t logo;
+#endif
+    WindowMultiIconButton w_buttons[button_count];
+    window_text_t w_labels[button_count];
+
+public:
+    static bool EverBeenOpened() { return ever_been_opened; }
+    screen_home_2_data_t();
+    ~screen_home_2_data_t();
+
+    virtual void InitState(screen_init_variant var) override;
+    virtual screen_init_variant GetCurrentState() const override;
+
+protected:
+    virtual void windowEvent(window_t *sender, GUI_event_t event, void *param) override;
+
+private:
+    void on_enter();
+};
