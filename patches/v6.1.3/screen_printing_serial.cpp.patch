diff --git a/src/gui/screen_printing_serial.cpp b/src/gui/screen_printing_serial.cpp
index 9075d83c8..0e869a381 100644
--- a/src/gui/screen_printing_serial.cpp
+++ b/src/gui/screen_printing_serial.cpp
@@ -6,27 +6,28 @@
 #include "ScreenHandler.hpp"
 #include "odometer.hpp"
 #include "config_features.h"
-#include "window_icon.hpp"
 #include "screen_menu_tune.hpp"
-#include "img_resources.hpp"
+#include "screen_messages.hpp" // Include for term and message buffer
 #include <serial_printing.hpp>
 
 #if ENABLED(CRASH_RECOVERY)
     #include "../Marlin/src/feature/prusa/crash_recovery.hpp"
 #endif
-
+point_i16_t get_location() {
+    return {
+        GuiDefaults::RectScreenBody.TopCenter().x / 2,
+        GuiDefaults::RectScreenBody.TopCenter().y
+    };
+}
 screen_printing_serial_data_t::screen_printing_serial_data_t()
     : ScreenPrintingModel(_(caption))
-    , octo_icon(this, Rect16((display::GetW() - img::serial_printing_172x138.w) / 2, GuiDefaults::RectScreenBody.Top(), img::serial_printing_172x138.w, img::serial_printing_172x138.h), &img::serial_printing_172x138)
-    , last_tick(0)
+    , last_tick(0) // Integrate the term from screen_messages_data_t
     , connection(connection_state_t::connected)
+    , term(this, get_location(), &term_buff)
     , last_state(marlin_server::State::Aborted) {
     ClrMenuTimeoutClose();
     SetOnSerialClose();
 
-    octo_icon.Disable();
-    octo_icon.Unshadow();
-
     SetButtonIconAndLabel(BtnSocket::Right, BtnRes::Disconnect, LabelRes::Stop);
 }
 
@@ -54,6 +55,13 @@ void screen_printing_serial_data_t::windowEvent(window_t *sender, GUI_event_t ev
         last_state = state;
     }
 
+    // Update the message buffer content in the terminal
+    char *txt = nullptr;
+    while (screen_messages_data_t::message_buffer.try_get(txt)) {
+        term.Printf("%s\n", txt);
+        free(txt);
+    }
+
     ScreenPrintingModel::windowEvent(sender, event, param);
 }
 
@@ -62,7 +70,7 @@ void screen_printing_serial_data_t::tuneAction() {
 }
 
 void screen_printing_serial_data_t::pauseAction() {
-    // pause or resume button, depenging on what state we are in
+    // pause or resume button, depending on what state we are in
     marlin_server::State state = marlin_vars()->print_state;
     switch (state) {
     case marlin_server::State::Paused:
